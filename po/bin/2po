#! /usr/bin/perl

# convert old linuxrc *.txt files to *.po files

sub read_texts;

%pmap = (
  "brasil", "pt_BR",
  "breton", "br",
  "czech", "cs",
  "dutch", "nl",
  "english", "en",
  "french", "fr",
  "german", "de",
  "greek", "el",
  "hungarian", "hu",
  "indonesia", "id",
  "italian", "it",
  "polish", "pl",
  "portuguese", "pt",
  "romanian", "ro",
  "russian", "ru",
  "slovak", "sk",
  "spanish", "es"
);

read_texts "english", 1;

for $lang (@ARGV) {
  $lang =~ s/\.txt$//;
  read_texts $lang;
}


sub read_texts
{
  local $_;

  my ($lang, @f, %txt, $txt, $t, $ids);

  $lang = shift;
  $ids = shift;

  open F, "${lang}.txt";
  @f = (<F>);
  close F;

  for (@f) {
    s/^\{?\s*//;
    next if /^\}|^static|^\s*$/;
    if(s/^(TXT_\S+?),\s*//) {
      $txt = $1;
      push @txts, $txt if $ids;
    }
    s/\s*(\},?)?\s*$//;
    if(!/^\".*\"$/) {
      die "format error in $lang.txt:\n$txt: >>$_<<\n"
    }
    push @{$txt{$txt}}, $_;
#    print "$txt: >>$_<<\n"
  }

  if($lang eq 'english') {
    %txt_en = %txt;
  }
  else {
    open W, $pmap{$lang} ? ">$pmap{$lang}.po" : ">$lang.po";
    for (@txts) {
      print W "#. $_\n";
      if(@{$txt_en{$_}} == 1) {
        print W "msgid ${$txt_en{$_}}[0]\n"
      }
      else {
        print W "msgid \"\"\n";
        for $t (@{$txt_en{$_}}) {
          print W "$t\n"
        }
      }
      if(@{$txt{$_}} == 1) {
        print W "msgstr ${$txt{$_}}[0]\n"
      }
      else {
        print W "msgstr \"\"\n";
        for $t (@{$txt{$_}}) {
          print W "$t\n"
        }
      }
      print W "\n"
    }
    close W;
  }

}


